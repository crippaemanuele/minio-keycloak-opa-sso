# Root key for MinIO Tenant Chart
tenant:
  ###
  # The Tenant name
  name: myminio-tenant

  ###
  # Specify the MinIO container image to use.
  image:
    repository: quay.io/minio/minio
    # MODIFIED: Aggiornato a una versione recente. Controlla l'ultima versione stabile su Quay.io se necessario.
    tag: RELEASE.2025-04-03T14-56-28Z
    pullPolicy: IfNotPresent

  ###
  # Secrets for private image repositories (lascia vuoto per Quay.io pubblico)
  imagePullSecret: {}

  ###
  # Init containers (non necessari per ora)
  initContainers: []

  ###
  # Scheduler (usa quello di default di Kubernetes)
  scheduler: {}

  ###
  # Configuration Secret details
  configuration:
    # Nome del Secret che conterrà le variabili d'ambiente (es. credenziali root)
    name: myminio-env-configuration

  ###
  # Root user credentials - DYNAMICALLY CREATED (OK for Dev/Test on Minikube)
  # !! IMPORTANT: Do NOT use these hardcoded credentials in production. !!
  # For production, create a secret manually and reference it via 'configuration.name'
  # setting 'existingSecret: true' (parametro da aggiungere se non implicito).
  configSecret:
    name: myminio-env-configuration
    accessKey: minio
    secretKey: minio123
    # existingSecret: false # Implicito se non presente, indica che il Secret va creato

  ###
  # Metadata shared across all pools' statefulsets and pods
  poolsMetadata:
    annotations: {}
    labels: {}

  ###
  # Pool configuration (MinIO Server groups)
  pools:
      # NOTE: Configurato un solo pool in modalità Standalone per Minikube
    - # MODIFIED: Impostato a 1 per modalità Standalone (meno risorse, no fault tolerance)
      servers: 1
      # Nome del pool
      name: pool-0
      # MODIFIED: Impostato a 1 volume per server (necessario per Standalone)
      volumesPerServer: 1
      # Dimensione di ogni volume persistente
      size: 10Gi # Ajusta se necessario per i tuoi test
      ###
      # MODIFIED: DECOMMENTATO e impostato a 'standard'.
      #           Verifica che 'standard' sia una StorageClass valida nel tuo Minikube (`kubectl get sc`)
      #           Questo è FONDAMENTALE per far funzionare lo storage.
      storageClassName: standard
      ###
      # Annotations/Labels for PersistentVolumeClaims (PVCs)
      storageAnnotations: {}
      storageLabels: {}
      ###
      # Annotations/Labels specific to Pods in this pool
      annotations: {}
      labels: {}
      ###
      # Tolerations (non necessarie per Minikube single-node)
      tolerations: []
      ###
      # Node Selector (non necessario per Minikube single-node)
      nodeSelector: {}
      ###
      # Affinity rules (non necessarie per Minikube single-node)
      affinity: {}
      ###
      # MODIFIED: Definite richieste e limiti di risorse.
      #           FONDAMENTALE su Minikube per evitare che MinIO consumi troppe risorse.
      #           Monitora e aggiusta questi valori se necessario.
      resources:
        requests:
          memory: "512Mi" # Richiesta minima di memoria
          cpu: "250m"     # Richiesta minima di CPU (0.25 core)
        limits:
          memory: "1Gi"  # Limite massimo di memoria
          cpu: "500m"     # Limite massimo di CPU (0.5 core)
      ###
      # Security Context for Pods (impostazioni di sicurezza raccomandate)
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch" # Ottimizzazione permessi
        runAsNonRoot: true
      ###
      # Security Context for Containers (impostazioni di sicurezza raccomandate)
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
      ###
      # Topology Spread Constraints (non necessarie per Minikube single-node)
      topologySpreadConstraints: []
      # runtimeClassName: ""

  ###
  # Mount path for persistent volumes inside the container
  mountPath: /export

  ###
  # Sub path within the mount path for data storage
  # WARNING: Do not change mountPath/subPath after initial deployment!
  subPath: /data

  ###
  # Prometheus Metrics Endpoint Configuration
  metrics:
    # MODIFIED: Abilitato per permettere il monitoraggio delle performance (consigliato)
    enabled: true
    port: 9000 # Porta API/Console dove vengono esposte le metriche
    protocol: http

  ###
  # Certificate and TLS settings
  certificate:
    # Trust external CAs (non necessario per ora)
    externalCaCertSecret: []
    # Use custom TLS certs (non necessario per ora)
    externalCertSecret: []
    # NOTE: Mantenuto a true. L'operatore genererà certificati autofirmati per TLS interno.
    #       Il tuo backend dovrà fidarsi di questa CA o ignorare la verifica (sconsigliato in prod).
    #       Necessario per preparare il passaggio a HTTPS completo in futuro.
    requestAutoCert: true
    # Customization for auto-generated certs (usa default)
    certConfig: {}

  ###
  # MinIO Features (lascia default per ora)
  features:
    bucketDNS: false
    domains: {}
    enableSFTP: false

  ###
  # MODIFIED: Aggiunti bucket da creare automaticamente all'avvio.
  #           Modifica i nomi in base alla tua applicazione (banca o clinica).
  buckets:
    - name: referti-clinica # Esempio per clinica
      # objectLock: false # Opzionale: abilita WORM
      # region: us-east-1 # Opzionale: imposta regione
    - name: documenti-transazioni # Esempio per banca

  ###
  # Auto-create additional users from secrets (non necessario per ora, userai OPA)
  users: []

  ###
  # Pod Management Policy for StatefulSet
  podManagementPolicy: Parallel # OK per Standalone e sviluppo

  ###
  # Liveness/Readiness/Startup Probes (usa default dell'operatore)
  liveness: {}
  readiness: {}
  startup: {}

  ###
  # Container Lifecycle Hooks (non necessari per ora)
  lifecycle: {}

  ###
  # Expose Services externally via LoadBalancer (non necessario per Minikube/accesso interno)
  exposeServices: {} # Lascia vuoto per usare servizi ClusterIP standard

  ###
  # Kubernetes Service Account (usa quello generato di default)
  serviceAccountName: ""

  ###
  # Integrate with Prometheus Operator (ServiceMonitor creation)
  # NOTE: Lascia false a meno che tu non abbia Prometheus Operator installato e funzionante.
  #       'metrics.enabled: true' è sufficiente per esporre l'endpoint.
  prometheusOperator: false

  ###
  # Pod Logging Configuration
  logging: {} # Usa default. Considera { format: json } per log aggregation futura.

  ###
  # Metadata for the Kubernetes Services (MinIO API and Console)
  serviceMetadata: {}

  ###
  # Custom Environment Variables for MinIO container (non necessari per ora per SSE-S3 base)
  env: []

  ###
  # Pod Priority Class (non necessario per ora)
  priorityClassName: ""

  ###
  # Additional volumes to mount (non necessari per ora)
  additionalVolumes: []

  ###
  # Mount points for additional volumes (non necessari per ora)
  additionalVolumeMounts: []

  ###
  # KES Configuration (Key Encryption Service) - Keep commented out for now
  # Needed for Server-Side Encryption with External KMS (Vault, AWS KMS, etc.)
  #kes:
  #  (...)

###
# Ingress configuration (Exposing services via an Ingress Controller)
ingress:
  # Ingress for MinIO S3 API (non necessario, accesso via backend interno)
  api:
    enabled: false
    # ingressClassName: "nginx" # Esempio se usi Nginx Ingress
    # labels: {}
    # annotations: {}
    # tls: [] # Configura TLS qui se l'Ingress deve gestirlo
    # host: minio-api.yourdomain.com
    # path: /
    # pathType: Prefix
  # Ingress for MinIO Console (Opzionale: abilita se vuoi accesso web diretto)
  console:
    # MODIFIED: Lasciato disabilitato. Imposta a 'true' se vuoi accedere alla console
    #           direttamente dal browser durante lo sviluppo.
    enabled: false
    # ingressClassName: "nginx" # Esempio: specifica il tuo Ingress Controller
    # labels: {}
    # annotations: {}
    # tls: [] # Configura TLS qui se l'Ingress deve gestirlo
    # host: minio-console.minikube.local # Esempio: mappa IP minikube a questo host
    # path: /
    # pathType: Prefix

###
# Extra Kubernetes resources to deploy alongside the chart (non necessario per ora)
# extraResources:
#  (...)
