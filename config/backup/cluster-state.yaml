apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap-env-vars: 72a9081827b65f72068eafddf5d9f790931b5e704ce63e6b25075ed6f3919a91
      checksum/secrets: 422f22b33833eeb136ae2f0b9a551f4dbe8a3a34a184eb3ac4e94cd6dc8e80a4
    creationTimestamp: "2025-03-24T14:19:19Z"
    generateName: keycloak-
    labels:
      app.kubernetes.io/app-version: 26.1.4
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: keycloak-5898cd89bc
      helm.sh/chart: keycloak-24.4.13
      statefulset.kubernetes.io/pod-name: keycloak-0
    name: keycloak-0
    namespace: keycloak
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: keycloak
      uid: 0859a4a5-b6cc-478c-85cb-5b69ba84ee33
    resourceVersion: "36792"
    uid: 249c9067-9611-4028-adbc-f62ecdf1b041
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloak
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: true
    containers:
    - env:
      - name: KUBERNETES_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: BITNAMI_DEBUG
        value: "false"
      - name: KC_BOOTSTRAP_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: keycloak
      - name: KEYCLOAK_DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: keycloak-postgresql
      - name: KEYCLOAK_HTTP_RELATIVE_PATH
        value: /
      - name: KC_SPI_ADMIN_REALM
        value: master
      envFrom:
      - configMapRef:
          name: keycloak-env-vars
      image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 300
        periodSeconds: 1
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 5
      name: keycloak
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 7800
        name: discovery
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /realms/master
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /bitnami/keycloak
        name: empty-dir
        subPath: app-volume-dir
      - mountPath: /opt/bitnami/keycloak/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/keycloak/lib/quarkus
        name: empty-dir
        subPath: app-quarkus-dir
      - mountPath: /opt/bitnami/keycloak/data
        name: empty-dir
        subPath: app-data-dir
      - mountPath: /opt/bitnami/keycloak/providers
        name: empty-dir
        subPath: app-providers-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: keycloak-0
    initContainers:
    - args:
      - -ec
      - |
        . /opt/bitnami/scripts/liblog.sh

        info "Copying writable dirs to empty dir"
        # In order to not break the application functionality we need to make some
        # directories writable, so we need to copy it to an empty dir volume
        cp -r --preserve=mode /opt/bitnami/keycloak/lib/quarkus /emptydir/app-quarkus-dir
        cp -r --preserve=mode /opt/bitnami/keycloak/data /emptydir/app-data-dir
        cp -r --preserve=mode /opt/bitnami/keycloak/providers /emptydir/app-providers-dir
        info "Copy operation completed"
      command:
      - /bin/bash
      image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
      imagePullPolicy: IfNotPresent
      name: prepare-write-dirs
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: keycloak
    serviceAccountName: keycloak
    subdomain: keycloak-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: empty-dir
    - name: kube-api-access-dg8hk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:33:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:33:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a49186cd5e6cce0076d1cf487c159ced35d1157d62546eec27f33c233f4cbede
      image: bitnami/keycloak:26.1.4-debian-12-r0
      imageID: docker-pullable://bitnami/keycloak@sha256:71afb4d7aae7f059f67c2cb80ced840400bfd8562ec00a84f1af658e09335a7d
      lastState:
        terminated:
          containerID: docker://a23bea1fee6476781ba298bcc1bf8cbb8eac0060d2312f3581e7420cbb4ba2cf
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:04Z"
      name: keycloak
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:07Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /bitnami/keycloak
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/conf
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/lib/quarkus
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/data
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/providers
        name: empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://cafa541be7495fe10e34ece4d0a191ab06e1e18cedb38a0241085118a8006152
      image: bitnami/keycloak:26.1.4-debian-12-r0
      imageID: docker-pullable://bitnami/keycloak@sha256:71afb4d7aae7f059f67c2cb80ced840400bfd8562ec00a84f1af658e09335a7d
      lastState: {}
      name: prepare-write-dirs
      ready: true
      restartCount: 13
      started: false
      state:
        terminated:
          containerID: docker://cafa541be7495fe10e34ece4d0a191ab06e1e18cedb38a0241085118a8006152
          exitCode: 0
          finishedAt: "2025-03-27T07:32:05Z"
          reason: Completed
          startedAt: "2025-03-27T07:32:03Z"
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.145
    podIPs:
    - ip: 10.244.0.145
    qosClass: Burstable
    startTime: "2025-03-24T14:19:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-24T14:19:20Z"
    generateName: keycloak-postgresql-
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: keycloak-postgresql-78d66ccc7b
      helm.sh/chart: postgresql-16.5.0
      statefulset.kubernetes.io/pod-name: keycloak-postgresql-0
    name: keycloak-postgresql-0
    namespace: keycloak
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: keycloak-postgresql
      uid: a202e1ee-b795-49b4-8201-c2a79ed90955
    resourceVersion: "36597"
    uid: df586b2a-e7ea-4727-bb60-2fd55fa253e2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: primary
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: postgresql
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: POSTGRESQL_PORT_NUMBER
        value: "5432"
      - name: POSTGRESQL_VOLUME_DIR
        value: /bitnami/postgresql
      - name: PGDATA
        value: /bitnami/postgresql/data
      - name: POSTGRES_USER
        value: bn_keycloak
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: keycloak-postgresql
      - name: POSTGRES_POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: keycloak-postgresql
      - name: POSTGRES_DATABASE
        value: bitnami_keycloak
      - name: POSTGRESQL_ENABLE_LDAP
        value: "no"
      - name: POSTGRESQL_ENABLE_TLS
        value: "no"
      - name: POSTGRESQL_LOG_HOSTNAME
        value: "false"
      - name: POSTGRESQL_LOG_CONNECTIONS
        value: "false"
      - name: POSTGRESQL_LOG_DISCONNECTIONS
        value: "false"
      - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
        value: "off"
      - name: POSTGRESQL_CLIENT_MIN_MESSAGES
        value: error
      - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
        value: pgaudit
      image: docker.io/bitnami/postgresql:17.4.0-debian-12-r4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1
            -p 5432
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgresql
      ports:
      - containerPort: 5432
        name: tcp-postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - -e
          - |
            exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1 -p 5432
            [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/postgresql/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/postgresql/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /bitnami/postgresql
        name: data
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: keycloak-postgresql-0
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: keycloak-postgresql
    serviceAccountName: keycloak-postgresql
    subdomain: keycloak-postgresql-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-keycloak-postgresql-0
    - emptyDir: {}
      name: empty-dir
    - emptyDir:
        medium: Memory
      name: dshm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://09d8b5e52f81a242709a06be05f031f390554c61da15e7adb0fb32c6275af223
      image: bitnami/postgresql:17.4.0-debian-12-r4
      imageID: docker-pullable://bitnami/postgresql@sha256:41ad4f03c7842bed273dc308878a81c25131f55e038eb14979c43c4cc7ba9faf
      lastState:
        terminated:
          containerID: docker://30e68fcfb93d776e3f7a7154a65b41a4ea2a1637d482c10e4d2d6589d5fb9d37
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:01Z"
      name: postgresql
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:04Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /opt/bitnami/postgresql/conf
        name: empty-dir
      - mountPath: /opt/bitnami/postgresql/tmp
        name: empty-dir
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /bitnami/postgresql
        name: data
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.144
    podIPs:
    - ip: 10.244.0.144
    qosClass: Burstable
    startTime: "2025-03-24T14:19:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-23T16:45:57Z"
    generateName: coredns-668d6bf9bc-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 668d6bf9bc
    name: coredns-668d6bf9bc-r4v7l
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-668d6bf9bc
      uid: a4c09977-0647-4167-afb8-eececa619641
    resourceVersion: "36647"
    uid: aaf7d9ab-dfe2-4322-a4f4-aafbea76ff64
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g26ph
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-g26ph
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-23T16:45:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-23T16:45:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cd5510ba7b335df71f5c81e1416cd0d4fbd746a71b3a2cd518aa2742efe203a1
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: docker-pullable://registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e
      lastState:
        terminated:
          containerID: docker://a1a8f13ec9c176f3fccb9d4e81f82f85af06c0283eaa0a5b2bb3dbcf48a10c71
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:00Z"
      name: coredns
      ready: true
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:03Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g26ph
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.147
    podIPs:
    - ip: 10.244.0.147
    qosClass: Burstable
    startTime: "2025-03-23T16:45:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 2b4b75c2a289008e0b381891e9683040
      kubernetes.io/config.mirror: 2b4b75c2a289008e0b381891e9683040
      kubernetes.io/config.seen: "2025-03-23T16:45:51.984501060Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-23T16:45:52Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d3d656df-dbd2-4185-9fa6-31fc5f09c22d
    resourceVersion: "36485"
    uid: 7f6e80d3-473e-422f-a323-ac30297f7ebc
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=minikube=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=minikube
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.16-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1e3f50de89974950fb4bc4b52f9d8290c0996b99e40381bec1fa326f3e2c123f
      image: registry.k8s.io/etcd:3.5.16-0
      imageID: docker-pullable://registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5
      lastState:
        terminated:
          containerID: docker://d1b6a86ac7739f6b325c63098bbf85d75f428c9942e5fc24632f380a5bd003c5
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:00:48Z"
      name: etcd
      ready: true
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:31:53Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-27T07:31:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: d72d0a4cf4be077c9919d46b7358a5e8
      kubernetes.io/config.mirror: d72d0a4cf4be077c9919d46b7358a5e8
      kubernetes.io/config.seen: "2025-03-23T16:45:51.984503908Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-23T16:45:52Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d3d656df-dbd2-4185-9fa6-31fc5f09c22d
    resourceVersion: "36584"
    uid: 570d130c-e232-4a62-853d-9d9983c46206
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d87140dc0e16a64e785608fc906643bc22a37d97e462d31c0551450458bb60c1
      image: registry.k8s.io/kube-apiserver:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-apiserver@sha256:ebc0ce2d7e647dd97980ec338ad81496c111741ab4ad05e7c5d37539aaf7dc3b
      lastState:
        terminated:
          containerID: docker://39231804251fdc29b7da6584f3c2c8b68ff1aac47ef8a2cc63c90f140205ab47
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:00:48Z"
      name: kube-apiserver
      ready: true
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:31:53Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-27T07:31:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 843c74f7b3bc7d7040a05c31708a6a30
      kubernetes.io/config.mirror: 843c74f7b3bc7d7040a05c31708a6a30
      kubernetes.io/config.seen: "2025-03-23T16:45:45.217920810Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-23T16:45:51Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d3d656df-dbd2-4185-9fa6-31fc5f09c22d
    resourceVersion: "36592"
    uid: 82155d0a-5c36-45ac-8ff7-2077db04b408
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5bbeaf8edaca6a278c66fc24fb87c05318d37ebe081b8319ebde91febfd9b3ad
      image: registry.k8s.io/kube-controller-manager:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-controller-manager@sha256:c8faedf1a5f3981ffade770c696b676d30613681a95be3287c1f7eec50e49b6d
      lastState:
        terminated:
          containerID: docker://c92d5f925ce3ace33215ea318ecb1e2f96690c52f3273668c45f22c82fea2a3f
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:00:48Z"
      name: kube-controller-manager
      ready: true
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:31:53Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-27T07:31:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-23T16:45:57Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 64b9dbc74b
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-srw8d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: a3a25f19-3cdc-4d06-826d-57c244ed12eb
    resourceVersion: "36460"
    uid: c490f02c-36c0-4d6f-9cac-fd47dacb176e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.32.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jgz8l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-jgz8l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-23T16:45:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-23T16:45:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a8d49ff24a5bb1c2c14bb7a9dc10d1f5f89032967bcb6e4de261c2f58874e2f8
      image: registry.k8s.io/kube-proxy:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-proxy@sha256:6aee00d0c7f4869144d1bdbbed7572cd55fd1a4d58fef5a21f53836054cb39b4
      lastState:
        terminated:
          containerID: docker://42d69d249d794340326c31198303c169ad5b82f46574e7f421787daa19244171
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:00:59Z"
      name: kube-proxy
      ready: true
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:01Z"
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jgz8l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2025-03-23T16:45:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d14ce008bee3a1f3bd7cf547688f9dfe
      kubernetes.io/config.mirror: d14ce008bee3a1f3bd7cf547688f9dfe
      kubernetes.io/config.seen: "2025-03-23T16:45:51.984505796Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-03-23T16:45:52Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: d3d656df-dbd2-4185-9fa6-31fc5f09c22d
    resourceVersion: "36594"
    uid: f90b11a9-b798-413e-9d10-eb7398974f32
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      image: registry.k8s.io/kube-scheduler:v1.32.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 10259
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:31:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ee42ed754c4b015e1ae70e578dde80ceae60b9cb6ae81827ac7b007ba99bf43a
      image: registry.k8s.io/kube-scheduler:v1.32.0
      imageID: docker-pullable://registry.k8s.io/kube-scheduler@sha256:84c998f7610b356a5eed24f801c01b273cf3e83f081f25c9b16aa8136c2cafb1
      lastState:
        terminated:
          containerID: docker://fe9356b014b897b5b9087dd37b8fd23142bce27bc44bbea8d9286ca430cf99a2
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:00:48Z"
      name: kube-scheduler
      ready: true
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:31:53Z"
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2025-03-27T07:31:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2025-03-23T16:45:53Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "36635"
    uid: ab088c5d-8f2c-4352-bfc7-c6a1643b4196
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjl2g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-hjl2g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-23T16:45:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-23T16:45:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e4976ca2f8afb523e20d8ef8926f4493133f29fa89626ceab3f1ae4e89657a0f
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState:
        terminated:
          containerID: docker://e29f363f1587cf6b931118ee0eeef97a3462d1ded56c98fbf9217343400e6396
          exitCode: 1
          finishedAt: "2025-03-27T07:32:33Z"
          reason: Error
          startedAt: "2025-03-27T07:32:01Z"
      name: storage-provisioner
      ready: true
      restartCount: 40
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:46Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjl2g
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2025-03-23T16:45:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-24T07:56:14Z"
    generateName: minio-operator-75bbc5d4dc-
    labels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: operator
      app.kubernetes.io/version: v7.0.1
      helm.sh/chart: operator-7.0.1
      operator: leader
      pod-template-hash: 75bbc5d4dc
    name: minio-operator-75bbc5d4dc-bwbgv
    namespace: minio-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: minio-operator-75bbc5d4dc
      uid: 3df81df6-ad7a-4967-aa2f-fd974d13f2e0
    resourceVersion: "36552"
    uid: ea56c2a0-c3b4-4a57-8d95-cf1bf1ec568b
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: name
              operator: In
              values:
              - minio-operator
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - controller
      env:
      - name: OPERATOR_STS_ENABLED
        value: "on"
      image: quay.io/minio/operator:v7.0.1
      imagePullPolicy: IfNotPresent
      name: operator
      resources:
        requests:
          cpu: 200m
          ephemeral-storage: 500Mi
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vl25n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: minio-operator
    serviceAccountName: minio-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vl25n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T07:56:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T07:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://07bb30c7e02929e4aa601f54b26d5a85ba4be0f425a007a4051581225e02b662
      image: quay.io/minio/operator:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator@sha256:e5d98b0a1e91d8325002c09e45fd5d0d0a72e7e756e990250d90e178cccf0d49
      lastState:
        terminated:
          containerID: docker://abd5bdf97542c8b4da9847ff9c554751d652893577909f404dd2c3739cc17124
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:00Z"
      name: operator
      ready: true
      restartCount: 15
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:03Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vl25n
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.146
    podIPs:
    - ip: 10.244.0.146
    qosClass: Burstable
    startTime: "2025-03-24T07:56:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-24T07:56:14Z"
    generateName: minio-operator-75bbc5d4dc-
    labels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: operator
      app.kubernetes.io/version: v7.0.1
      helm.sh/chart: operator-7.0.1
      pod-template-hash: 75bbc5d4dc
    name: minio-operator-75bbc5d4dc-c9ntg
    namespace: minio-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: minio-operator-75bbc5d4dc
      uid: 3df81df6-ad7a-4967-aa2f-fd974d13f2e0
    resourceVersion: "36534"
    uid: 1aafe659-b73c-43ca-9ec2-52d23541b147
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: name
              operator: In
              values:
              - minio-operator
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - controller
      env:
      - name: OPERATOR_STS_ENABLED
        value: "on"
      image: quay.io/minio/operator:v7.0.1
      imagePullPolicy: IfNotPresent
      name: operator
      resources:
        requests:
          cpu: 200m
          ephemeral-storage: 500Mi
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qjzpj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: minio-operator
    serviceAccountName: minio-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qjzpj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T07:56:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T07:56:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2521b6492966deb00d941b8048531a37248b8a29214798f3c893bd2395acb644
      image: quay.io/minio/operator:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator@sha256:e5d98b0a1e91d8325002c09e45fd5d0d0a72e7e756e990250d90e178cccf0d49
      lastState:
        terminated:
          containerID: docker://35b95f399e72669e38f9ae664acd305ca69db3d377f5b513c3a2cf64620db374
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:00Z"
      name: operator
      ready: true
      restartCount: 15
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:04Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qjzpj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.148
    podIPs:
    - ip: 10.244.0.148
    qosClass: Burstable
    startTime: "2025-03-24T07:56:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      min.io/revision: "0"
    creationTimestamp: "2025-03-24T13:30:55Z"
    generateName: myminio-tenant-pool-0-
    labels:
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: myminio-tenant-pool-0-8594c8f8cb
      statefulset.kubernetes.io/pod-name: myminio-tenant-pool-0-0
      v1.min.io/console: myminio-tenant-console
      v1.min.io/pool: pool-0
      v1.min.io/tenant: myminio-tenant
    name: myminio-tenant-pool-0-0
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: myminio-tenant-pool-0
      uid: ea87ae2b-7189-4bf2-9139-e0adfe68edb7
    resourceVersion: "36713"
    uid: 58e7d656-afa9-448e-8d99-4df868859095
  spec:
    containers:
    - args:
      - server
      - --certs-dir
      - /tmp/certs
      - --console-address
      - :9443
      env:
      - name: MINIO_CONFIG_ENV_FILE
        value: /tmp/minio/config.env
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: minio-port
        protocol: TCP
      - containerPort: 9443
        name: console-port
        protocol: TCP
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2g8l
        readOnly: true
    - args:
      - sidecar
      - --tenant
      - myminio-tenant
      - --config-name
      - myminio-env-configuration
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: sidecar
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ready
          port: 4444
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2g8l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: myminio-tenant-pool-0-0
    initContainers:
    - args:
      - validate
      - --tenant
      - myminio-tenant
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: validate-arguments
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2g8l
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: myminio-tenant-sa
    serviceAccountName: myminio-tenant-sa
    subdomain: myminio-tenant-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data0
      persistentVolumeClaim:
        claimName: data0-myminio-tenant-pool-0-0
    - name: data1
      persistentVolumeClaim:
        claimName: data1-myminio-tenant-pool-0-0
    - name: data2
      persistentVolumeClaim:
        claimName: data2-myminio-tenant-pool-0-0
    - name: data3
      persistentVolumeClaim:
        claimName: data3-myminio-tenant-pool-0-0
    - emptyDir: {}
      name: cfg-vol
    - name: myminio-tenant-tls
      projected:
        defaultMode: 420
        sources:
        - secret:
            items:
            - key: public.crt
              path: public.crt
            - key: private.key
              path: private.key
            - key: public.crt
              path: CAs/public.crt
            name: myminio-tenant-tls
    - name: configuration
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: myminio-env-configuration
    - name: kube-api-access-s2g8l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T13:31:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T13:30:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://eaa13f26a725a22f2aefeb5d74e3753eb4f8eaab60653bfb4ec9b56adb62da24
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imageID: docker-pullable://quay.io/minio/minio@sha256:46b3009bf7041eefbd90bd0d2b38c6ddc24d20a35d609551a1802c558c1c958f
      lastState:
        terminated:
          containerID: docker://8fc046192235e7afd64d8f94a548f03f59849ec846c977ded4689f9b52b7210c
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:47Z"
      name: minio
      ready: true
      restartCount: 14
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:51Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2g8l
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: docker://c5f2671b987218cd0aaf8d81e8e4b71358de66a00ed741232a391cc58ae2ab7c
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState:
        terminated:
          containerID: docker://c0feef4d0ea6675743bb37decae82e554c83fc5866304a6b6f27adeb5e8e8bee
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:48Z"
      name: sidecar
      ready: true
      restartCount: 14
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:51Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2g8l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://45621e481eef93e895b459c56c11c52952f024c596ea05593760b1611d7210ca
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState: {}
      name: validate-arguments
      ready: true
      restartCount: 28
      started: false
      state:
        terminated:
          containerID: docker://45621e481eef93e895b459c56c11c52952f024c596ea05593760b1611d7210ca
          exitCode: 0
          finishedAt: "2025-03-27T07:32:51Z"
          reason: Completed
          startedAt: "2025-03-27T07:32:50Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2g8l
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.149
    podIPs:
    - ip: 10.244.0.149
    qosClass: BestEffort
    startTime: "2025-03-24T13:30:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      min.io/revision: "0"
    creationTimestamp: "2025-03-24T13:30:55Z"
    generateName: myminio-tenant-pool-0-
    labels:
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: myminio-tenant-pool-0-8594c8f8cb
      statefulset.kubernetes.io/pod-name: myminio-tenant-pool-0-1
      v1.min.io/console: myminio-tenant-console
      v1.min.io/pool: pool-0
      v1.min.io/tenant: myminio-tenant
    name: myminio-tenant-pool-0-1
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: myminio-tenant-pool-0
      uid: ea87ae2b-7189-4bf2-9139-e0adfe68edb7
    resourceVersion: "36691"
    uid: 12556814-7b27-41a4-9c27-fa4f54e6e2ae
  spec:
    containers:
    - args:
      - server
      - --certs-dir
      - /tmp/certs
      - --console-address
      - :9443
      env:
      - name: MINIO_CONFIG_ENV_FILE
        value: /tmp/minio/config.env
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: minio-port
        protocol: TCP
      - containerPort: 9443
        name: console-port
        protocol: TCP
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwnc8
        readOnly: true
    - args:
      - sidecar
      - --tenant
      - myminio-tenant
      - --config-name
      - myminio-env-configuration
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: sidecar
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ready
          port: 4444
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwnc8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: myminio-tenant-pool-0-1
    initContainers:
    - args:
      - validate
      - --tenant
      - myminio-tenant
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: validate-arguments
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwnc8
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: myminio-tenant-sa
    serviceAccountName: myminio-tenant-sa
    subdomain: myminio-tenant-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data0
      persistentVolumeClaim:
        claimName: data0-myminio-tenant-pool-0-1
    - name: data1
      persistentVolumeClaim:
        claimName: data1-myminio-tenant-pool-0-1
    - name: data2
      persistentVolumeClaim:
        claimName: data2-myminio-tenant-pool-0-1
    - name: data3
      persistentVolumeClaim:
        claimName: data3-myminio-tenant-pool-0-1
    - emptyDir: {}
      name: cfg-vol
    - name: myminio-tenant-tls
      projected:
        defaultMode: 420
        sources:
        - secret:
            items:
            - key: public.crt
              path: public.crt
            - key: private.key
              path: private.key
            - key: public.crt
              path: CAs/public.crt
            name: myminio-tenant-tls
    - name: configuration
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: myminio-env-configuration
    - name: kube-api-access-nwnc8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T13:31:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T13:30:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://53f3b634d66a1a48a4f43ba819d384be452b9ff72be478a254650003da83bb17
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imageID: docker-pullable://quay.io/minio/minio@sha256:46b3009bf7041eefbd90bd0d2b38c6ddc24d20a35d609551a1802c558c1c958f
      lastState:
        terminated:
          containerID: docker://a329ed012478b3603e3adf2b09302cf06a50ea13582ec48957c2a92890f18ce7
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:47Z"
      name: minio
      ready: true
      restartCount: 14
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:47Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwnc8
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: docker://1bbf2cea5ab0c63e756ff17c4c97bb6b06f4d21e620501c8c13d9bd78073477f
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState:
        terminated:
          containerID: docker://1074fc9af51e6e0535de5ca08b7fe421e7825e6a1b26e609c6b1304c0069334d
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:48Z"
      name: sidecar
      ready: true
      restartCount: 14
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:47Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwnc8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://89b3bbc440aee9a74f151e20880ce5f81682a61e6f1a9f2f9445412ab00fe095
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState: {}
      name: validate-arguments
      ready: true
      restartCount: 28
      started: false
      state:
        terminated:
          containerID: docker://89b3bbc440aee9a74f151e20880ce5f81682a61e6f1a9f2f9445412ab00fe095
          exitCode: 0
          finishedAt: "2025-03-27T07:32:47Z"
          reason: Completed
          startedAt: "2025-03-27T07:32:47Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwnc8
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.151
    podIPs:
    - ip: 10.244.0.151
    qosClass: BestEffort
    startTime: "2025-03-24T13:30:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      min.io/revision: "0"
    creationTimestamp: "2025-03-24T13:30:55Z"
    generateName: myminio-tenant-pool-0-
    labels:
      apps.kubernetes.io/pod-index: "2"
      controller-revision-hash: myminio-tenant-pool-0-8594c8f8cb
      statefulset.kubernetes.io/pod-name: myminio-tenant-pool-0-2
      v1.min.io/console: myminio-tenant-console
      v1.min.io/pool: pool-0
      v1.min.io/tenant: myminio-tenant
    name: myminio-tenant-pool-0-2
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: myminio-tenant-pool-0
      uid: ea87ae2b-7189-4bf2-9139-e0adfe68edb7
    resourceVersion: "36722"
    uid: f762a539-762b-49ac-8f0a-d545d5340153
  spec:
    containers:
    - args:
      - server
      - --certs-dir
      - /tmp/certs
      - --console-address
      - :9443
      env:
      - name: MINIO_CONFIG_ENV_FILE
        value: /tmp/minio/config.env
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: minio-port
        protocol: TCP
      - containerPort: 9443
        name: console-port
        protocol: TCP
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6crc2
        readOnly: true
    - args:
      - sidecar
      - --tenant
      - myminio-tenant
      - --config-name
      - myminio-env-configuration
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: sidecar
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ready
          port: 4444
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6crc2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: myminio-tenant-pool-0-2
    initContainers:
    - args:
      - validate
      - --tenant
      - myminio-tenant
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: validate-arguments
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6crc2
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: myminio-tenant-sa
    serviceAccountName: myminio-tenant-sa
    subdomain: myminio-tenant-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data2
      persistentVolumeClaim:
        claimName: data2-myminio-tenant-pool-0-2
    - name: data3
      persistentVolumeClaim:
        claimName: data3-myminio-tenant-pool-0-2
    - name: data0
      persistentVolumeClaim:
        claimName: data0-myminio-tenant-pool-0-2
    - name: data1
      persistentVolumeClaim:
        claimName: data1-myminio-tenant-pool-0-2
    - emptyDir: {}
      name: cfg-vol
    - name: myminio-tenant-tls
      projected:
        defaultMode: 420
        sources:
        - secret:
            items:
            - key: public.crt
              path: public.crt
            - key: private.key
              path: private.key
            - key: public.crt
              path: CAs/public.crt
            name: myminio-tenant-tls
    - name: configuration
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: myminio-env-configuration
    - name: kube-api-access-6crc2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T13:31:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T13:30:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b59cdf7a358f81f529ac1c8fd9d763a8f94e479d0dd8a82964fd919f5ee6da0a
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imageID: docker-pullable://quay.io/minio/minio@sha256:46b3009bf7041eefbd90bd0d2b38c6ddc24d20a35d609551a1802c558c1c958f
      lastState:
        terminated:
          containerID: docker://6f34cf08f13463261b77aedbb3a6e7fc3619d3da9425443ab13b1f0af49d1af5
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:47Z"
      name: minio
      ready: true
      restartCount: 14
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:51Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6crc2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: docker://f93d55a850aae57728f244ca4289529b0f39b8ff47cdd59dc3094092e8142124
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState:
        terminated:
          containerID: docker://92a131612efddbb5cc4f4942b9556d55bcb97ebc6cec5717dbb38f50e0bafd0e
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:48Z"
      name: sidecar
      ready: true
      restartCount: 14
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:52Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6crc2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://38eae6b2625214e7f99b059fec2ec8b4accd8a9b49ba036b8fccd6cfa2059c62
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState: {}
      name: validate-arguments
      ready: true
      restartCount: 28
      started: false
      state:
        terminated:
          containerID: docker://38eae6b2625214e7f99b059fec2ec8b4accd8a9b49ba036b8fccd6cfa2059c62
          exitCode: 0
          finishedAt: "2025-03-27T07:32:50Z"
          reason: Completed
          startedAt: "2025-03-27T07:32:49Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6crc2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.150
    podIPs:
    - ip: 10.244.0.150
    qosClass: BestEffort
    startTime: "2025-03-24T13:30:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      min.io/revision: "0"
    creationTimestamp: "2025-03-26T16:35:25Z"
    generateName: myminio-tenant-pool-0-
    labels:
      apps.kubernetes.io/pod-index: "3"
      controller-revision-hash: myminio-tenant-pool-0-8594c8f8cb
      statefulset.kubernetes.io/pod-name: myminio-tenant-pool-0-3
      v1.min.io/console: myminio-tenant-console
      v1.min.io/pool: pool-0
      v1.min.io/tenant: myminio-tenant
    name: myminio-tenant-pool-0-3
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: myminio-tenant-pool-0
      uid: ea87ae2b-7189-4bf2-9139-e0adfe68edb7
    resourceVersion: "36747"
    uid: af63c566-be0c-436b-ba7f-f3773312ef46
  spec:
    containers:
    - args:
      - server
      - --certs-dir
      - /tmp/certs
      - --console-address
      - :9443
      env:
      - name: MINIO_CONFIG_ENV_FILE
        value: /tmp/minio/config.env
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imagePullPolicy: IfNotPresent
      name: minio
      ports:
      - containerPort: 9000
        name: minio-port
        protocol: TCP
      - containerPort: 9443
        name: console-port
        protocol: TCP
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kp7bf
        readOnly: true
    - args:
      - sidecar
      - --tenant
      - myminio-tenant
      - --config-name
      - myminio-env-configuration
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: sidecar
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ready
          port: 4444
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kp7bf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: myminio-tenant-pool-0-3
    initContainers:
    - args:
      - validate
      - --tenant
      - myminio-tenant
      env:
      - name: CLUSTER_DOMAIN
        value: cluster.local
      image: quay.io/minio/operator-sidecar:v7.0.1
      imagePullPolicy: IfNotPresent
      name: validate-arguments
      resources: {}
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kp7bf
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: myminio-tenant-sa
    serviceAccountName: myminio-tenant-sa
    subdomain: myminio-tenant-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data0
      persistentVolumeClaim:
        claimName: data0-myminio-tenant-pool-0-3
    - name: data1
      persistentVolumeClaim:
        claimName: data1-myminio-tenant-pool-0-3
    - name: data2
      persistentVolumeClaim:
        claimName: data2-myminio-tenant-pool-0-3
    - name: data3
      persistentVolumeClaim:
        claimName: data3-myminio-tenant-pool-0-3
    - emptyDir: {}
      name: cfg-vol
    - name: myminio-tenant-tls
      projected:
        defaultMode: 420
        sources:
        - secret:
            items:
            - key: public.crt
              path: public.crt
            - key: private.key
              path: private.key
            - key: public.crt
              path: CAs/public.crt
            name: myminio-tenant-tls
    - name: configuration
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: myminio-env-configuration
    - name: kube-api-access-kp7bf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:32:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-26T16:35:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:33:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-27T07:33:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-26T16:35:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e001172ea6353b2adeeb22dc8678bb06bb2beb15d8e2fb0b26a4788ecce8bc58
      image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
      imageID: docker-pullable://quay.io/minio/minio@sha256:46b3009bf7041eefbd90bd0d2b38c6ddc24d20a35d609551a1802c558c1c958f
      lastState:
        terminated:
          containerID: docker://94da20b5b2cdc19ba0e8bcd735c699f5474f6c3d59ee4af742e7c544c112711f
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:50Z"
      name: minio
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:49Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /export0
        name: data0
      - mountPath: /export1
        name: data1
      - mountPath: /export2
        name: data2
      - mountPath: /export3
        name: data3
      - mountPath: /tmp/certs
        name: myminio-tenant-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kp7bf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: docker://5d10db0f459448d1b7a4299990613151fadcacaeceefdeea947316c1f9d57a4f
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState:
        terminated:
          containerID: docker://e5ea03fc4036e71420030f696d4a83afcfb400b9829783a549c4e971f0a4b77f
          exitCode: 255
          finishedAt: "2025-03-27T07:31:41Z"
          reason: Error
          startedAt: "2025-03-26T18:01:52Z"
      name: sidecar
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-03-27T07:32:49Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kp7bf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://5a21532ec9ff5de8d8412f3a4a813ae521f4a82316386715e298089c116bb8bd
      image: quay.io/minio/operator-sidecar:v7.0.1
      imageID: docker-pullable://quay.io/minio/operator-sidecar@sha256:ccc4fb79135aed8bf9c73d6f758d8e4f4ff24f51ca1bdd6f5b8ad9a9ad841a2f
      lastState: {}
      name: validate-arguments
      ready: true
      restartCount: 8
      started: false
      state:
        terminated:
          containerID: docker://5a21532ec9ff5de8d8412f3a4a813ae521f4a82316386715e298089c116bb8bd
          exitCode: 0
          finishedAt: "2025-03-27T07:32:48Z"
          reason: Completed
          startedAt: "2025-03-27T07:32:48Z"
      volumeMounts:
      - mountPath: /tmp/minio/
        name: cfg-vol
      - mountPath: /tmp/minio-config
        name: configuration
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kp7bf
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.143
    podIPs:
    - ip: 10.244.0.143
    qosClass: BestEffort
    startTime: "2025-03-26T16:35:25Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-23T16:45:51Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "230"
    uid: 6230f419-d880-46a7-a8e0-5b4fe5f218e6
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      helm.sh/chart: keycloak-24.4.13
    name: keycloak
    namespace: keycloak
    resourceVersion: "9533"
    uid: 4f47934f-1372-4115-b9ee-3321a50605de
  spec:
    clusterIP: 10.110.44.20
    clusterIPs:
    - 10.110.44.20
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      helm.sh/chart: keycloak-24.4.13
    name: keycloak-headless
    namespace: keycloak
    resourceVersion: "9524"
    uid: 1b7c57e7-e298-4de3-b930-5acc8972dcac
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      helm.sh/chart: postgresql-16.5.0
    name: keycloak-postgresql
    namespace: keycloak
    resourceVersion: "9538"
    uid: d6fbda04-4899-4c58-a6c8-fa25152c6062
  spec:
    clusterIP: 10.96.111.43
    clusterIPs:
    - 10.96.111.43
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      helm.sh/chart: postgresql-16.5.0
    name: keycloak-postgresql-hl
    namespace: keycloak
    resourceVersion: "9523"
    uid: 81fb6b22-d6b6-41cb-9db5-d1b977be6c3a
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-23T16:45:51Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "270"
    uid: fc6c9560-bf64-4c1e-918e-0cff20ab2840
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: operator
      meta.helm.sh/release-namespace: minio-operator
    creationTimestamp: "2025-03-24T07:56:14Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/version: v7.0.1
      helm.sh/chart: operator-7.0.1
    name: operator
    namespace: minio-operator
    resourceVersion: "2513"
    uid: 0cde5e2b-03e6-4ee0-ba11-dd0641ac4a66
  spec:
    clusterIP: 10.107.49.207
    clusterIPs:
    - 10.107.49.207
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 4221
      protocol: TCP
      targetPort: 4221
    selector:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
      operator: leader
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: operator
      meta.helm.sh/release-namespace: minio-operator
    creationTimestamp: "2025-03-24T07:56:14Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/version: v7.0.1
      helm.sh/chart: operator-7.0.1
    name: sts
    namespace: minio-operator
    resourceVersion: "2509"
    uid: 15cfbe65-a3fc-4f29-962b-176e627cdda0
  spec:
    clusterIP: 10.100.170.77
    clusterIPs:
    - 10.100.170.77
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 4223
      protocol: TCP
      targetPort: 4223
    selector:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-24T13:30:54Z"
    name: minio
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: minio.min.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: Tenant
      name: myminio-tenant
      uid: fe35f54c-2ce7-4889-95bd-c8a146e9ed3e
    resourceVersion: "6284"
    uid: 01006eb1-db30-4f95-be7b-5d8c5ee8cbed
  spec:
    clusterIP: 10.111.68.224
    clusterIPs:
    - 10.111.68.224
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https-minio
      port: 443
      protocol: TCP
      targetPort: 9000
    selector:
      v1.min.io/tenant: myminio-tenant
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-24T13:30:54Z"
    name: myminio-tenant-console
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: minio.min.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: Tenant
      name: myminio-tenant
      uid: fe35f54c-2ce7-4889-95bd-c8a146e9ed3e
    resourceVersion: "6290"
    uid: cc3cc93a-bdd6-4a58-849a-6ae70f7745a7
  spec:
    clusterIP: 10.100.120.58
    clusterIPs:
    - 10.100.120.58
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https-console
      port: 9443
      protocol: TCP
      targetPort: 9443
    selector:
      v1.min.io/tenant: myminio-tenant
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-24T13:30:54Z"
    name: myminio-tenant-hl
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: minio.min.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: Tenant
      name: myminio-tenant
      uid: fe35f54c-2ce7-4889-95bd-c8a146e9ed3e
    resourceVersion: "6295"
    uid: dafda119-bb72-453c-a543-fc47a88aa369
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https-minio
      port: 9000
      protocol: TCP
      targetPort: 9000
    publishNotReadyAddresses: true
    selector:
      v1.min.io/tenant: myminio-tenant
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-03-23T16:45:51Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "34453"
    uid: a3a25f19-3cdc-4d06-826d-57c244ed12eb
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.32.0
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-23T16:45:51Z"
    generation: 2
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "36651"
    uid: 9cb8aeb0-56b8-4604-98f3-fac317ccddbb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-23T16:45:57Z"
      lastUpdateTime: "2025-03-23T16:45:57Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-23T16:45:57Z"
      lastUpdateTime: "2025-03-23T16:47:55Z"
      message: ReplicaSet "coredns-668d6bf9bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: operator
      meta.helm.sh/release-namespace: minio-operator
    creationTimestamp: "2025-03-24T07:56:14Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/version: v7.0.1
      helm.sh/chart: operator-7.0.1
    name: minio-operator
    namespace: minio-operator
    resourceVersion: "36558"
    uid: 0cf75423-10c1-40ea-88e0-446feaa8b1bf
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: operator
          app.kubernetes.io/version: v7.0.1
          helm.sh/chart: operator-7.0.1
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - minio-operator
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - controller
          env:
          - name: OPERATOR_STS_ENABLED
            value: "on"
          image: quay.io/minio/operator:v7.0.1
          imagePullPolicy: IfNotPresent
          name: operator
          resources:
            requests:
              cpu: 200m
              ephemeral-storage: 500Mi
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: minio-operator
        serviceAccountName: minio-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-03-24T07:56:14Z"
      lastUpdateTime: "2025-03-24T07:56:29Z"
      message: ReplicaSet "minio-operator-75bbc5d4dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-27T07:32:07Z"
      lastUpdateTime: "2025-03-27T07:32:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-23T16:45:57Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 668d6bf9bc
    name: coredns-668d6bf9bc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 9cb8aeb0-56b8-4604-98f3-fac317ccddbb
    resourceVersion: "36650"
    uid: a4c09977-0647-4167-afb8-eececa619641
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 668d6bf9bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 668d6bf9bc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: operator
      meta.helm.sh/release-namespace: minio-operator
    creationTimestamp: "2025-03-24T07:56:14Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: operator
      app.kubernetes.io/version: v7.0.1
      helm.sh/chart: operator-7.0.1
      pod-template-hash: 75bbc5d4dc
    name: minio-operator-75bbc5d4dc
    namespace: minio-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: minio-operator
      uid: 0cf75423-10c1-40ea-88e0-446feaa8b1bf
    resourceVersion: "36556"
    uid: 3df81df6-ad7a-4967-aa2f-fd974d13f2e0
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
        pod-template-hash: 75bbc5d4dc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: operator
          app.kubernetes.io/version: v7.0.1
          helm.sh/chart: operator-7.0.1
          pod-template-hash: 75bbc5d4dc
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - minio-operator
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - controller
          env:
          - name: OPERATOR_STS_ENABLED
            value: "on"
          image: quay.io/minio/operator:v7.0.1
          imagePullPolicy: IfNotPresent
          name: operator
          resources:
            requests:
              cpu: 200m
              ephemeral-storage: 500Mi
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: minio-operator
        serviceAccountName: minio-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    generation: 1
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      helm.sh/chart: keycloak-24.4.13
    name: keycloak
    namespace: keycloak
    resourceVersion: "36797"
    uid: 0859a4a5-b6cc-478c-85cb-5b69ba84ee33
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: keycloak
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloak
    serviceName: keycloak-headless
    template:
      metadata:
        annotations:
          checksum/configmap-env-vars: 72a9081827b65f72068eafddf5d9f790931b5e704ce63e6b25075ed6f3919a91
          checksum/secrets: 422f22b33833eeb136ae2f0b9a551f4dbe8a3a34a184eb3ac4e94cd6dc8e80a4
        creationTimestamp: null
        labels:
          app.kubernetes.io/app-version: 26.1.4
          app.kubernetes.io/component: keycloak
          app.kubernetes.io/instance: keycloak
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: keycloak
          app.kubernetes.io/version: 26.1.4
          helm.sh/chart: keycloak-24.4.13
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: keycloak
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: true
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BITNAMI_DEBUG
            value: "false"
          - name: KC_BOOTSTRAP_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: keycloak
          - name: KEYCLOAK_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: keycloak-postgresql
          - name: KEYCLOAK_HTTP_RELATIVE_PATH
            value: /
          - name: KC_SPI_ADMIN_REALM
            value: master
          envFrom:
          - configMapRef:
              name: keycloak-env-vars
          image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 1
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: keycloak
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 7800
            name: discovery
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /realms/master
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /bitnami/keycloak
            name: empty-dir
            subPath: app-volume-dir
          - mountPath: /opt/bitnami/keycloak/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/keycloak/lib/quarkus
            name: empty-dir
            subPath: app-quarkus-dir
          - mountPath: /opt/bitnami/keycloak/data
            name: empty-dir
            subPath: app-data-dir
          - mountPath: /opt/bitnami/keycloak/providers
            name: empty-dir
            subPath: app-providers-dir
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - args:
          - -ec
          - |
            . /opt/bitnami/scripts/liblog.sh

            info "Copying writable dirs to empty dir"
            # In order to not break the application functionality we need to make some
            # directories writable, so we need to copy it to an empty dir volume
            cp -r --preserve=mode /opt/bitnami/keycloak/lib/quarkus /emptydir/app-quarkus-dir
            cp -r --preserve=mode /opt/bitnami/keycloak/data /emptydir/app-data-dir
            cp -r --preserve=mode /opt/bitnami/keycloak/providers /emptydir/app-providers-dir
            info "Copy operation completed"
          command:
          - /bin/bash
          image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
          imagePullPolicy: IfNotPresent
          name: prepare-write-dirs
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: keycloak
        serviceAccountName: keycloak
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: keycloak-5898cd89bc
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: keycloak-5898cd89bc
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    generation: 1
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      helm.sh/chart: postgresql-16.5.0
    name: keycloak-postgresql
    namespace: keycloak
    resourceVersion: "36602"
    uid: a202e1ee-b795-49b4-8201-c2a79ed90955
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: postgresql
    serviceName: keycloak-postgresql-hl
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: keycloak
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: postgresql
          app.kubernetes.io/version: 17.4.0
          helm.sh/chart: postgresql-16.5.0
        name: keycloak-postgresql
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: postgresql
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: POSTGRESQL_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_VOLUME_DIR
            value: /bitnami/postgresql
          - name: PGDATA
            value: /bitnami/postgresql/data
          - name: POSTGRES_USER
            value: bn_keycloak
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: keycloak-postgresql
          - name: POSTGRES_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgres-password
                name: keycloak-postgresql
          - name: POSTGRES_DATABASE
            value: bitnami_keycloak
          - name: POSTGRESQL_ENABLE_LDAP
            value: "no"
          - name: POSTGRESQL_ENABLE_TLS
            value: "no"
          - name: POSTGRESQL_LOG_HOSTNAME
            value: "false"
          - name: POSTGRESQL_LOG_CONNECTIONS
            value: "false"
          - name: POSTGRESQL_LOG_DISCONNECTIONS
            value: "false"
          - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
            value: "off"
          - name: POSTGRESQL_CLIENT_MIN_MESSAGES
            value: error
          - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
            value: pgaudit
          image: docker.io/bitnami/postgresql:17.4.0-debian-12-r4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1
                -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
          - containerPort: 5432
            name: tcp-postgresql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/postgresql/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/postgresql/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /bitnami/postgresql
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: keycloak-postgresql
        serviceAccountName: keycloak-postgresql
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - emptyDir:
            medium: Memory
          name: dshm
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: keycloak-postgresql-78d66ccc7b
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: keycloak-postgresql-78d66ccc7b
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: "2025-03-24T13:30:55Z"
    generation: 3
    labels:
      v1.min.io/pool: pool-0
      v1.min.io/tenant: myminio-tenant
    name: myminio-tenant-pool-0
    namespace: minio-tenant
    ownerReferences:
    - apiVersion: minio.min.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: Tenant
      name: myminio-tenant
      uid: fe35f54c-2ce7-4889-95bd-c8a146e9ed3e
    resourceVersion: "36755"
    uid: ea87ae2b-7189-4bf2-9139-e0adfe68edb7
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        v1.min.io/console: myminio-tenant-console
        v1.min.io/pool: pool-0
        v1.min.io/tenant: myminio-tenant
    serviceName: myminio-tenant-hl
    template:
      metadata:
        annotations:
          min.io/revision: "0"
        creationTimestamp: null
        labels:
          v1.min.io/console: myminio-tenant-console
          v1.min.io/pool: pool-0
          v1.min.io/tenant: myminio-tenant
      spec:
        containers:
        - args:
          - server
          - --certs-dir
          - /tmp/certs
          - --console-address
          - :9443
          env:
          - name: MINIO_CONFIG_ENV_FILE
            value: /tmp/minio/config.env
          image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
          imagePullPolicy: IfNotPresent
          name: minio
          ports:
          - containerPort: 9000
            name: minio-port
            protocol: TCP
          - containerPort: 9443
            name: console-port
            protocol: TCP
          resources: {}
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/minio/
            name: cfg-vol
          - mountPath: /export0
            name: data0
          - mountPath: /export1
            name: data1
          - mountPath: /export2
            name: data2
          - mountPath: /export3
            name: data3
          - mountPath: /tmp/certs
            name: myminio-tenant-tls
        - args:
          - sidecar
          - --tenant
          - myminio-tenant
          - --config-name
          - myminio-env-configuration
          env:
          - name: CLUSTER_DOMAIN
            value: cluster.local
          image: quay.io/minio/operator-sidecar:v7.0.1
          imagePullPolicy: IfNotPresent
          name: sidecar
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ready
              port: 4444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/minio/
            name: cfg-vol
          - mountPath: /tmp/minio-config
            name: configuration
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - validate
          - --tenant
          - myminio-tenant
          env:
          - name: CLUSTER_DOMAIN
            value: cluster.local
          image: quay.io/minio/operator-sidecar:v7.0.1
          imagePullPolicy: IfNotPresent
          name: validate-arguments
          resources: {}
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/minio/
            name: cfg-vol
          - mountPath: /tmp/minio-config
            name: configuration
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: myminio-tenant-sa
        serviceAccountName: myminio-tenant-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cfg-vol
        - name: myminio-tenant-tls
          projected:
            defaultMode: 420
            sources:
            - secret:
                items:
                - key: public.crt
                  path: public.crt
                - key: private.key
                  path: private.key
                - key: public.crt
                  path: CAs/public.crt
                name: myminio-tenant-tls
        - name: configuration
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: myminio-env-configuration
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data0
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard
        volumeMode: Filesystem
      status:
        phase: Pending
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data1
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard
        volumeMode: Filesystem
      status:
        phase: Pending
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data2
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard
        volumeMode: Filesystem
      status:
        phase: Pending
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data3
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 4
    collisionCount: 0
    currentReplicas: 4
    currentRevision: myminio-tenant-pool-0-8594c8f8cb
    observedGeneration: 3
    readyReplicas: 4
    replicas: 4
    updateRevision: myminio-tenant-pool-0-8594c8f8cb
    updatedReplicas: 4
kind: List
metadata:
  resourceVersion: ""
