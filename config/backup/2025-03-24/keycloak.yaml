apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap-env-vars: 72a9081827b65f72068eafddf5d9f790931b5e704ce63e6b25075ed6f3919a91
      checksum/secrets: 422f22b33833eeb136ae2f0b9a551f4dbe8a3a34a184eb3ac4e94cd6dc8e80a4
    creationTimestamp: "2025-03-24T14:19:19Z"
    generateName: keycloak-
    labels:
      app.kubernetes.io/app-version: 26.1.4
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: keycloak-5898cd89bc
      helm.sh/chart: keycloak-24.4.13
      statefulset.kubernetes.io/pod-name: keycloak-0
    name: keycloak-0
    namespace: keycloak
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: keycloak
      uid: 0859a4a5-b6cc-478c-85cb-5b69ba84ee33
    resourceVersion: "10551"
    uid: 249c9067-9611-4028-adbc-f62ecdf1b041
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloak
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: true
    containers:
    - env:
      - name: KUBERNETES_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: BITNAMI_DEBUG
        value: "false"
      - name: KC_BOOTSTRAP_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: keycloak
      - name: KEYCLOAK_DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: keycloak-postgresql
      - name: KEYCLOAK_HTTP_RELATIVE_PATH
        value: /
      - name: KC_SPI_ADMIN_REALM
        value: master
      envFrom:
      - configMapRef:
          name: keycloak-env-vars
      image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 300
        periodSeconds: 1
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 5
      name: keycloak
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 7800
        name: discovery
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /realms/master
          port: http
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /bitnami/keycloak
        name: empty-dir
        subPath: app-volume-dir
      - mountPath: /opt/bitnami/keycloak/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/keycloak/lib/quarkus
        name: empty-dir
        subPath: app-quarkus-dir
      - mountPath: /opt/bitnami/keycloak/data
        name: empty-dir
        subPath: app-data-dir
      - mountPath: /opt/bitnami/keycloak/providers
        name: empty-dir
        subPath: app-providers-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: keycloak-0
    initContainers:
    - args:
      - -ec
      - |
        . /opt/bitnami/scripts/liblog.sh

        info "Copying writable dirs to empty dir"
        # In order to not break the application functionality we need to make some
        # directories writable, so we need to copy it to an empty dir volume
        cp -r --preserve=mode /opt/bitnami/keycloak/lib/quarkus /emptydir/app-quarkus-dir
        cp -r --preserve=mode /opt/bitnami/keycloak/data /emptydir/app-data-dir
        cp -r --preserve=mode /opt/bitnami/keycloak/providers /emptydir/app-providers-dir
        info "Copy operation completed"
      command:
      - /bin/bash
      image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
      imagePullPolicy: IfNotPresent
      name: prepare-write-dirs
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: keycloak
    serviceAccountName: keycloak
    subdomain: keycloak-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: empty-dir
    - name: kube-api-access-dg8hk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:32:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:33:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:33:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3f5d1d987c11d9f990d3dbe5d1b4c539bfe76f35147bd19eefc19e42e3c6970e
      image: bitnami/keycloak:26.1.4-debian-12-r0
      imageID: docker-pullable://bitnami/keycloak@sha256:71afb4d7aae7f059f67c2cb80ced840400bfd8562ec00a84f1af658e09335a7d
      lastState:
        terminated:
          containerID: docker://964295f257d220ed89220d3142477c28f41a7809164c8c926c003c1a882fc18e
          exitCode: 255
          finishedAt: "2025-03-24T14:31:44Z"
          reason: Error
          startedAt: "2025-03-24T14:19:56Z"
      name: keycloak
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-24T14:32:14Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /bitnami/keycloak
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/conf
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/lib/quarkus
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/data
        name: empty-dir
      - mountPath: /opt/bitnami/keycloak/providers
        name: empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://2b1accbe954d1d0e21ef1baf0c7641c0755d5cd932d4e642a6ce181382230af3
      image: bitnami/keycloak:26.1.4-debian-12-r0
      imageID: docker-pullable://bitnami/keycloak@sha256:71afb4d7aae7f059f67c2cb80ced840400bfd8562ec00a84f1af658e09335a7d
      lastState: {}
      name: prepare-write-dirs
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: docker://2b1accbe954d1d0e21ef1baf0c7641c0755d5cd932d4e642a6ce181382230af3
          exitCode: 0
          finishedAt: "2025-03-24T14:32:12Z"
          reason: Completed
          startedAt: "2025-03-24T14:32:11Z"
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg8hk
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.33
    podIPs:
    - ip: 10.244.0.33
    qosClass: Burstable
    startTime: "2025-03-24T14:19:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-24T14:19:20Z"
    generateName: keycloak-postgresql-
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: keycloak-postgresql-78d66ccc7b
      helm.sh/chart: postgresql-16.5.0
      statefulset.kubernetes.io/pod-name: keycloak-postgresql-0
    name: keycloak-postgresql-0
    namespace: keycloak
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: keycloak-postgresql
      uid: a202e1ee-b795-49b4-8201-c2a79ed90955
    resourceVersion: "10389"
    uid: df586b2a-e7ea-4727-bb60-2fd55fa253e2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: primary
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: postgresql
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: POSTGRESQL_PORT_NUMBER
        value: "5432"
      - name: POSTGRESQL_VOLUME_DIR
        value: /bitnami/postgresql
      - name: PGDATA
        value: /bitnami/postgresql/data
      - name: POSTGRES_USER
        value: bn_keycloak
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: keycloak-postgresql
      - name: POSTGRES_POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: keycloak-postgresql
      - name: POSTGRES_DATABASE
        value: bitnami_keycloak
      - name: POSTGRESQL_ENABLE_LDAP
        value: "no"
      - name: POSTGRESQL_ENABLE_TLS
        value: "no"
      - name: POSTGRESQL_LOG_HOSTNAME
        value: "false"
      - name: POSTGRESQL_LOG_CONNECTIONS
        value: "false"
      - name: POSTGRESQL_LOG_DISCONNECTIONS
        value: "false"
      - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
        value: "off"
      - name: POSTGRESQL_CLIENT_MIN_MESSAGES
        value: error
      - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
        value: pgaudit
      image: docker.io/bitnami/postgresql:17.4.0-debian-12-r4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1
            -p 5432
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: postgresql
      ports:
      - containerPort: 5432
        name: tcp-postgresql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - -e
          - |
            exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1 -p 5432
            [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/postgresql/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/postgresql/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /bitnami/postgresql
        name: data
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: keycloak-postgresql-0
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: keycloak-postgresql
    serviceAccountName: keycloak-postgresql
    subdomain: keycloak-postgresql-hl
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-keycloak-postgresql-0
    - emptyDir: {}
      name: empty-dir
    - emptyDir:
        medium: Memory
      name: dshm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:32:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:32:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:32:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-24T14:19:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://07ea7e02786f64e4cb5e1dd9d0fa159c4fb670f6a87622b1ca1d2ef9c491a6ee
      image: bitnami/postgresql:17.4.0-debian-12-r4
      imageID: docker-pullable://bitnami/postgresql@sha256:41ad4f03c7842bed273dc308878a81c25131f55e038eb14979c43c4cc7ba9faf
      lastState:
        terminated:
          containerID: docker://41a657a7fa2bea3e1b2b2dddfca498eae58ac6e337df84c4f5538fea6200269d
          exitCode: 255
          finishedAt: "2025-03-24T14:31:44Z"
          reason: Error
          startedAt: "2025-03-24T14:20:13Z"
      name: postgresql
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-24T14:32:10Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /opt/bitnami/postgresql/conf
        name: empty-dir
      - mountPath: /opt/bitnami/postgresql/tmp
        name: empty-dir
      - mountPath: /dev/shm
        name: dshm
      - mountPath: /bitnami/postgresql
        name: data
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.28
    podIPs:
    - ip: 10.244.0.28
    qosClass: Burstable
    startTime: "2025-03-24T14:19:21Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      helm.sh/chart: keycloak-24.4.13
    name: keycloak
    namespace: keycloak
    resourceVersion: "9533"
    uid: 4f47934f-1372-4115-b9ee-3321a50605de
  spec:
    clusterIP: 10.110.44.20
    clusterIPs:
    - 10.110.44.20
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      helm.sh/chart: keycloak-24.4.13
    name: keycloak-headless
    namespace: keycloak
    resourceVersion: "9524"
    uid: 1b7c57e7-e298-4de3-b930-5acc8972dcac
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      helm.sh/chart: postgresql-16.5.0
    name: keycloak-postgresql
    namespace: keycloak
    resourceVersion: "9538"
    uid: d6fbda04-4899-4c58-a6c8-fa25152c6062
  spec:
    clusterIP: 10.96.111.43
    clusterIPs:
    - 10.96.111.43
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      helm.sh/chart: postgresql-16.5.0
    name: keycloak-postgresql-hl
    namespace: keycloak
    resourceVersion: "9523"
    uid: 81fb6b22-d6b6-41cb-9db5-d1b977be6c3a
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    generation: 1
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/version: 26.1.4
      helm.sh/chart: keycloak-24.4.13
    name: keycloak
    namespace: keycloak
    resourceVersion: "10556"
    uid: 0859a4a5-b6cc-478c-85cb-5b69ba84ee33
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: keycloak
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloak
    serviceName: keycloak-headless
    template:
      metadata:
        annotations:
          checksum/configmap-env-vars: 72a9081827b65f72068eafddf5d9f790931b5e704ce63e6b25075ed6f3919a91
          checksum/secrets: 422f22b33833eeb136ae2f0b9a551f4dbe8a3a34a184eb3ac4e94cd6dc8e80a4
        creationTimestamp: null
        labels:
          app.kubernetes.io/app-version: 26.1.4
          app.kubernetes.io/component: keycloak
          app.kubernetes.io/instance: keycloak
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: keycloak
          app.kubernetes.io/version: 26.1.4
          helm.sh/chart: keycloak-24.4.13
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: keycloak
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: true
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BITNAMI_DEBUG
            value: "false"
          - name: KC_BOOTSTRAP_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: keycloak
          - name: KEYCLOAK_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: keycloak-postgresql
          - name: KEYCLOAK_HTTP_RELATIVE_PATH
            value: /
          - name: KC_SPI_ADMIN_REALM
            value: master
          envFrom:
          - configMapRef:
              name: keycloak-env-vars
          image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 1
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: keycloak
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 7800
            name: discovery
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /realms/master
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /bitnami/keycloak
            name: empty-dir
            subPath: app-volume-dir
          - mountPath: /opt/bitnami/keycloak/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/keycloak/lib/quarkus
            name: empty-dir
            subPath: app-quarkus-dir
          - mountPath: /opt/bitnami/keycloak/data
            name: empty-dir
            subPath: app-data-dir
          - mountPath: /opt/bitnami/keycloak/providers
            name: empty-dir
            subPath: app-providers-dir
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - args:
          - -ec
          - |
            . /opt/bitnami/scripts/liblog.sh

            info "Copying writable dirs to empty dir"
            # In order to not break the application functionality we need to make some
            # directories writable, so we need to copy it to an empty dir volume
            cp -r --preserve=mode /opt/bitnami/keycloak/lib/quarkus /emptydir/app-quarkus-dir
            cp -r --preserve=mode /opt/bitnami/keycloak/data /emptydir/app-data-dir
            cp -r --preserve=mode /opt/bitnami/keycloak/providers /emptydir/app-providers-dir
            info "Copy operation completed"
          command:
          - /bin/bash
          image: docker.io/bitnami/keycloak:26.1.4-debian-12-r0
          imagePullPolicy: IfNotPresent
          name: prepare-write-dirs
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: keycloak
        serviceAccountName: keycloak
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: keycloak-5898cd89bc
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: keycloak-5898cd89bc
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: keycloak
      meta.helm.sh/release-namespace: keycloak
    creationTimestamp: "2025-03-24T14:19:19Z"
    generation: 1
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/version: 17.4.0
      helm.sh/chart: postgresql-16.5.0
    name: keycloak-postgresql
    namespace: keycloak
    resourceVersion: "10394"
    uid: a202e1ee-b795-49b4-8201-c2a79ed90955
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: postgresql
    serviceName: keycloak-postgresql-hl
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: keycloak
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: postgresql
          app.kubernetes.io/version: 17.4.0
          helm.sh/chart: postgresql-16.5.0
        name: keycloak-postgresql
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: postgresql
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: POSTGRESQL_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_VOLUME_DIR
            value: /bitnami/postgresql
          - name: PGDATA
            value: /bitnami/postgresql/data
          - name: POSTGRES_USER
            value: bn_keycloak
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: keycloak-postgresql
          - name: POSTGRES_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgres-password
                name: keycloak-postgresql
          - name: POSTGRES_DATABASE
            value: bitnami_keycloak
          - name: POSTGRESQL_ENABLE_LDAP
            value: "no"
          - name: POSTGRESQL_ENABLE_TLS
            value: "no"
          - name: POSTGRESQL_LOG_HOSTNAME
            value: "false"
          - name: POSTGRESQL_LOG_CONNECTIONS
            value: "false"
          - name: POSTGRESQL_LOG_DISCONNECTIONS
            value: "false"
          - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
            value: "off"
          - name: POSTGRESQL_CLIENT_MIN_MESSAGES
            value: error
          - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
            value: pgaudit
          image: docker.io/bitnami/postgresql:17.4.0-debian-12-r4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1
                -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
          - containerPort: 5432
            name: tcp-postgresql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/postgresql/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/postgresql/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /bitnami/postgresql
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: keycloak-postgresql
        serviceAccountName: keycloak-postgresql
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - emptyDir:
            medium: Memory
          name: dshm
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: keycloak-postgresql-78d66ccc7b
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: keycloak-postgresql-78d66ccc7b
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
