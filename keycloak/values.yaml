ingress:
  enabled: true
  ingressClassName: "nginx"
  pathType: ImplementationSpecific
  apiVersion: "networking.k8s.io/v1"
  hostname: "keycloak.local"
  hostnameStrict: false
  path: "/"
  servicePort: http
  annotations:
    cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer" # Assicurati che esista
    nginx.ingress.kubernetes.io/backend-protocol: "http"
  labels: {}
  tls: true
  selfSigned: false
  extraHosts: []
  extraPaths: []
  extraTls:
    - hosts:
        - "keycloak.local"
      secretName: "keycloak-tls"
  secrets: []

adminIngress:
  enabled: false  # Disabilitato l'admin ingress, per usare solo keycloak.local
  ingressClassName: "nginx"
  pathType: ImplementationSpecific
  apiVersion: "networking.k8s.io/v1"
  hostname: "keycloak-admin.local"
  path: "/admin"
  servicePort: http
  annotations:
    cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer"
    nginx.ingress.kubernetes.io/backend-protocol: "http"
  labels: {}
  tls: true
  selfSigned: false
  extraHosts: []
  extraPaths: []
  extraTls:
    - hosts:
        - "keycloak-admin.local"
      secretName: "keycloak-admin-tls"
  secrets: []

tls:
  enabled: true  # TLS abilitato tramite ingress
  autoGenerated: false
  existingSecret: "keycloak-tls"
  usePem: true
  truststoreFilename: "keycloak.truststore.jks"
  keystoreFilename: "keycloak.keystore.jks"
  keystorePassword: ""
  truststorePassword: ""
  passwordsSecret: ""

service:
  type: NodePort
  http:
    enabled: true
  ports:
    http: 8080
    https: 8443
  nodePorts:
    http: ""  # Lascia che Minikube li assegni
    https: ""
  sessionAffinity: None
  sessionAffinityConfig: {}
  clusterIP: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  externalTrafficPolicy: Cluster
  annotations: {}
  extraPorts: []
  extraHeadlessPorts: []
  headless:
    annotations: {}
    extraPorts: []

auth:
  existingSecret: "keycloak-secrets"
  passwordSecretKey: "admin-password"

postgresql:
  auth:
    existingSecret: "keycloak-secrets"
    secretKeys:
      userPasswordKey: "postgres-password"

externalDatabase:
  existingSecret: "keycloak-secrets"
  existingSecretHostKey: "postgres-host"
  existingSecretPortKey: "postgres-port"
  existingSecretUserKey: "postgres-user"
  existingSecretDatabaseKey: "postgres-db"
  existingSecretPasswordKey: "postgres-password"
